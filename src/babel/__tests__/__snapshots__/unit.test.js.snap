// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel plugin should error if all arguments are not identifiers 1`] = `
  " Invalid di(...) arguments. Must be called with plain identifiers. 
     5 | 
     6 |       export function MyComponent() {
  >  7 |         di(Modal.Bla)
       |         ^
     8 |         return Modal.Bla />
     9 |       }
    10 |     "
`;

exports[`babel plugin should error if all arguments are wrapped 1`] = `
  " Invalid di(...) arguments. Must be called with plain identifiers. 
     5 | 
     6 |       export function MyComponent() {
  >  7 |         di([Modal])
       |         ^
     8 |         return Modal />
     9 |       }
    10 |     "
`;

exports[`babel plugin should error if used outside a function or a method 1`] = `
  " Invalid di(...) call. Must be inside a render function of a component. 
    4 |       import Modal from modal
    5 | 
  > 6 |       di(Modal)
      |       ^
    7 |       export function MyComponent() {
    8 |         return Modal />
    9 |       }"
`;

exports[`babel plugin should error if used without dependencies 1`] = `
  " Invalid di(...) arguments. Must be called with at least one argument. 
     5 | 
     6 |       export function MyComponent() {
  >  7 |         di()
       |         ^
     8 |         return Modal />
     9 |       }
    10 |     "
`;

exports[`babel plugin should not error if not a call expression 1`] = `
"import React from 'react';
import { di } from 'react-magnetic-di';
import Modal from 'modal';
const ModalMock = di.mock(Modal);
export function MyComponent() {
  return __jsx(ModalMock, null);
}"
`;

exports[`babel plugin should work in class components 1`] = `
"import React, { Component } from 'react';
import { di } from 'react-magnetic-di';
import Modal from 'modal';
export class MyComponent extends Component {
  render() {
    var [_Modal] = di([Modal]);
    return __jsx(_Modal, null);
  }

}"
`;

exports[`babel plugin should work in functional components 1`] = `
"import React from 'react';
import { di } from 'react-magnetic-di';
import Modal from 'modal';
export const MyComponent = () => {
  var [_Modal] = di([Modal]);
  return __jsx(_Modal, null);
};"
`;

exports[`babel plugin should work in functional components hoisted 1`] = `
"import React from 'react';
import { di, mock } from 'react-magnetic-di';
import Modal from 'modal';
export function MyComponent() {
  var [_Modal] = di([Modal]);
  return __jsx(_Modal, null);
}"
`;

exports[`babel plugin should work with locally defined dependencies 1`] = `
"import React from 'react';
import { di } from 'react-magnetic-di';

const useModalStatus = () => true;

export const MyComponent2 = () => {
  var [_useModalStatus] = di([useModalStatus]);

  const status = _useModalStatus();

  return status;
};"
`;

exports[`babel plugin should work with multiple dependencies across multiple components 1`] = `
"import React, { Component } from 'react';
import { di } from 'react-magnetic-di';
import Modal from 'modal';

const useModalStatus = () => true;

export function MyComponent() {
  var [_Modal, _useModalStatus] = di([Modal, useModalStatus]);

  const isOpen = _useModalStatus();

  return isOpen && __jsx(_Modal, null);
}

class MyComponent2 extends Component {
  render() {
    var [_Modal2] = di([Modal]);
    return __jsx(_Modal2, null);
  }

}

;"
`;
